name: build-images

on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'Version'
        required: false
    secrets:
      DOCKERHUB_USERNAME:
      DOCKERHUB_TOKEN:
      GCR_JSON_KEY:

jobs:
  # test templating before publishing a package
  prepare:
    name: Prepare Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'liberica'
      - name: Load matrix
        id: matrix
        shell: bash
        run: |
          if [ "${{ inputs.version }}" = "" ]; then
            ./mvnw help:evaluate -Dexpression=project.version -q
            echo "VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          else
            echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          fi          
          MATRIX=$(cat .github/workflows/images.json | jq -c)
          echo "MATRIX=$MATRIX"
          echo "MATRIX=$MATRIX" >> $GITHUB_ENV
    outputs:
      matrix: ${{ env.MATRIX }}
      version: ${{ env.VERSION }}
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    concurrency:
      group: ${{ matrix.name }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'liberica'
      - name: Install pack
        uses: jvalkeal/build-zoo-handler@v0.0.4
        with:
          pack-version: 0.30.0
      - name: Login to docker.io
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
      - name: Build and Publish ${{ matrix.name }}
        shell: bash
        env:
          TAG: ${{ needs.prepare.outputs.version }}
          DEFAULT_JDK: '11'
        run: |
          .github/workflows/build-image.sh ${{ matrix.path }} ${{ matrix.image }} ${{ matrix.name }}
